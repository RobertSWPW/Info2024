@using System.Security.Claims
@using System.Reflection
@using System.ComponentModel.DataAnnotations
@model Info2024.Models.ViewModels.TextWithOpinions
@{
  ViewData["Title"] = @Model.SelectedText.Title;
}

<article>
  <h1 class="text-primary text-center">@Model.SelectedText.Title</h1>
  <div class="row">
    <!-- Dane informacyjne o tekście -->
    <section class="col-lg-3 mt-3">
      <!--zdjęcie autora-->
      @if (Model.SelectedText.Author.Photo != null)
      {
        <div class="d-none d-lg-block">
          <img src="~/photo/mini/@Model.SelectedText.Author.Photo" width="150" alt="Autor tekstu" class="rounded-circle ms-3 mb-3">
        </div>
      }
      <div class="row textDisplay"> 
        <!--imię i nazwisko autora oraz data dodania-->
        <div class="col-6 col-lg-12">
          <p><i class="bi bi-person-circle me-1" title="Autor"></i><span class="text-success fw-bold">@Model.SelectedText.Author.FullName</span></p>
          <p><i class="bi bi-calendar-event me-1" title="Data dodania"></i>@Model.SelectedText.AddedDate.ToString("dd MMMM yyyy")</p>
          <p><i class="bi bi-folder2-open me-1" title="Kategoria"></i>@Model.SelectedText.Category.Name</p>
        </div>

        <!--liczba komentarzy oraz ocena tekstu-->
        <div class="col-6 col-lg-12">
          <p><i class="bi bi-smartwatch me-1" title="Czas"></i>Czas czytania ok. @Model.ReadingTime min</p>
          <p><i class="bi bi-chat-square-text me-1" title="Liczba komenatrzy"></i>@Model.CommentsCount @Model.Description</p>
          <p><i class="bi bi-trophy me-1" title="Ocena"></i>Ocena: @Model.AverageRating z @Model.RatingsCount</p>
        </div>
      </div>
      @{
        string[] tags = @Model.SelectedText.Keywords.Split(',');
        foreach (var tag in tags)
        {
          <p class="d-inline d-lg-block mb-1"><span class="badge bg-primary">@tag</span></p>
        }
      }
    </section>

    <!-- obrazek, streszczenie i treść tekstu -->
    <section class="col-lg-9">
      @{
        if (!String.IsNullOrEmpty(Model.SelectedText.Graphic))
        {
          <img class="img-fluid mt-3" src="~/img/@Model.SelectedText.Graphic">
        }
        else
        {
          <hr />
        }
      }

      <div class="col-10 offset-1 my-3">
        <h2 class="lead fst-italic">@Model.SelectedText.Summary</h2>
      </div>
      <hr />
      @Html.Raw(Model.SelectedText.Content)
      <hr />
    </section>

  </div> 
</article>

<div class="col-lg-9 offset-lg-3">
  <section class="mb-3">
    <a asp-action="Index" class="btn btn-primary">Lista tekstów</a>
    @if (User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.SelectedText.UserId)
    {
      <a asp-action="Edit" asp-route-id="@Model?.SelectedText.TextId" class="btn btn-warning">Edycja tekstu</a>
    }
    @if (User.Identity.IsAuthenticated)
    {
      <a asp-action="Create" asp-controller="Opinions" asp-route-id="@Model?.SelectedText.TextId" class="btn btn-success">Dodaj opinię</a>
    }
  </section>

  <section id="comments">
    @if (!User.Identity.IsAuthenticated)
    {
      <div class="alert alert-info" role="alert">
        Musisz być zalogowany(-na), aby móc przeglądać i dodawać komentarze.
      </div>
    }
    else if (Model.SelectedText.Opinions == null || !Model.SelectedText.Opinions.Any())
    {
      <div class="alert alert-success" role="alert">
        Dodaj pierwszy komentarz do tego tekstu.
      </div>
    }
    else
    {
      foreach (var item in Model.SelectedText.Opinions.OrderByDescending(c => c.OpinionId))
      {
        <div class="d-flex shadow-sm px-3 py-1 mb-3 rounded">
          <div class="flex-shrink-0">
            <img src="~/photo/mini/@((item.Author.Photo != null) ? @item.Author.Photo : "user.png")" width="64" alt="Fotografia autora" class="rounded-circle">
          </div>
          <div class="flex-grow-1 ms-3">
            <h6>
              <span class="fw-bold text-success me-3">@item.Author.FullName </span>
              <small class="text-secondary me-3"> dodano: @item.AddedDate.ToString("dd.MM.yyyy") </small>
              @if (item.Rating == null) { item.Rating = 0; }
              Ocena tekstu:<span class="text-warning">
                @(((Rating)item.Rating).GetType().GetField(item.Rating.ToString()).GetCustomAttribute<DisplayAttribute>().Name)
              </span>
            </h6>
            <p class="smaller">@item.Comment</p>
          </div>
        </div>
      }
    }
  </section>
</div>
