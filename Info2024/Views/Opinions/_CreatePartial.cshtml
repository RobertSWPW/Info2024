@using System.Reflection
@using System.ComponentModel.DataAnnotations
@using System.Security.Claims
@model Info2024.Models.Opinion

<div class="row interspace">
	<form asp-action="CreatePartial" asp-controller="Opinions" method="post">
		<div asp-validation-summary="ModelOnly" class="text-danger"></div>
		<input asp-for="UserId" type="hidden" />
		<input asp-for="TextId" type="hidden" />
		<div class="form-group">
			<label asp-for="Comment" class="control-label"></label>
			<textarea asp-for="Comment" class="form-control"></textarea>
			<span asp-validation-for="Comment" class="text-danger"></span>
		</div>
		@if (User.FindFirstValue(ClaimTypes.NameIdentifier) != Model.Text.UserId)
		{
			<div class="form-group">
				<label asp-for="Rating" class="control-label"></label>
				<select asp-for="Rating" class="form-control">
					<option value="">--- Wybierz ocenę ---</option>
					@foreach (Rating rating in Enum.GetValues(typeof(Rating)))
					{
						if ((int)rating != 0)
						{
							<option value="@((int)rating)">
								@(rating.GetType().GetField(rating.ToString()).GetCustomAttribute<DisplayAttribute>().Name)
							</option>
						}
					}
				</select>
				<span asp-validation-for="Rating" class="text-danger"></span>
			</div>
		}
		<div class="modal-footer">
			<div class="form-group">
				<input type="submit" value="Zapisz ocenę" class="btn btn-primary" />
				<button type="button" data-bs-dismiss="modal" class="btn btn-light">Powrót do tekstu</button>
			</div>
		</div>
	</form>
</div>

